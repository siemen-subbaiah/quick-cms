// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  apiKey        String?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Page {
  id              Int      @id @default(sequence())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdUserId   String
  createdUserName String
  displayName     String
  apiName         String
  description     String
  fields          Field[]
}

model Field {
  id              Int      @id @default(sequence())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdUserId   String
  createdUserName String
  fieldType       Int
  fieldName       String
  defaultValue    String?
  isRequired      Boolean
  isShortText     Boolean?
  value           String?
  page            Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId          Int
}
